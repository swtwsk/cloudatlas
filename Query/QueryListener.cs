//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Query.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="QueryParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public interface IQueryListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] QueryParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] QueryParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement_list([NotNull] QueryParser.Statement_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.statement_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement_list([NotNull] QueryParser.Statement_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] QueryParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] QueryParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhere_clause([NotNull] QueryParser.Where_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.where_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhere_clause([NotNull] QueryParser.Where_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.order_by_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrder_by_clause([NotNull] QueryParser.Order_by_clauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.order_by_clause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrder_by_clause([NotNull] QueryParser.Order_by_clauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.order_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrder_list([NotNull] QueryParser.Order_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.order_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrder_list([NotNull] QueryParser.Order_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.order_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrder_item([NotNull] QueryParser.Order_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.order_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrder_item([NotNull] QueryParser.Order_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.order"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrder([NotNull] QueryParser.OrderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.order"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrder([NotNull] QueryParser.OrderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.nulls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNulls([NotNull] QueryParser.NullsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.nulls"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNulls([NotNull] QueryParser.NullsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.sel_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSel_list([NotNull] QueryParser.Sel_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.sel_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSel_list([NotNull] QueryParser.Sel_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.sel_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSel_item([NotNull] QueryParser.Sel_itemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.sel_item"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSel_item([NotNull] QueryParser.Sel_itemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.sel_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSel_modifier([NotNull] QueryParser.Sel_modifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.sel_modifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSel_modifier([NotNull] QueryParser.Sel_modifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.sel_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSel_expr([NotNull] QueryParser.Sel_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.sel_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSel_expr([NotNull] QueryParser.Sel_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.cond_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCond_expr([NotNull] QueryParser.Cond_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.cond_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCond_expr([NotNull] QueryParser.Cond_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.cond_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCond_expr_no_gt([NotNull] QueryParser.Cond_expr_no_gtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.cond_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCond_expr_no_gt([NotNull] QueryParser.Cond_expr_no_gtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_expr([NotNull] QueryParser.And_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.and_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_expr([NotNull] QueryParser.And_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.and_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_expr_no_gt([NotNull] QueryParser.And_expr_no_gtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.and_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_expr_no_gt([NotNull] QueryParser.And_expr_no_gtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.not_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot_expr([NotNull] QueryParser.Not_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.not_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot_expr([NotNull] QueryParser.Not_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.not_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot_expr_no_gt([NotNull] QueryParser.Not_expr_no_gtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.not_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot_expr_no_gt([NotNull] QueryParser.Not_expr_no_gtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool_expr([NotNull] QueryParser.Bool_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.bool_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool_expr([NotNull] QueryParser.Bool_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.bool_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool_expr_no_gt([NotNull] QueryParser.Bool_expr_no_gtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.bool_expr_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool_expr_no_gt([NotNull] QueryParser.Bool_expr_no_gtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.basic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasic_expr([NotNull] QueryParser.Basic_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.basic_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasic_expr([NotNull] QueryParser.Basic_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.fact_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFact_expr([NotNull] QueryParser.Fact_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.fact_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFact_expr([NotNull] QueryParser.Fact_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.neg_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeg_expr([NotNull] QueryParser.Neg_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.neg_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeg_expr([NotNull] QueryParser.Neg_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.term_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm_expr([NotNull] QueryParser.Term_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.term_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm_expr([NotNull] QueryParser.Term_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] QueryParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] QueryParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.string_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterString_const([NotNull] QueryParser.String_constContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.string_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitString_const([NotNull] QueryParser.String_constContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.bool_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool_const([NotNull] QueryParser.Bool_constContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.bool_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool_const([NotNull] QueryParser.Bool_constContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.int_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_const([NotNull] QueryParser.Int_constContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.int_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_const([NotNull] QueryParser.Int_constContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.double_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDouble_const([NotNull] QueryParser.Double_constContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.double_const"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDouble_const([NotNull] QueryParser.Double_constContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.expr_list_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_list_opt([NotNull] QueryParser.Expr_list_optContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.expr_list_opt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_list_opt([NotNull] QueryParser.Expr_list_optContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_list([NotNull] QueryParser.Expr_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_list([NotNull] QueryParser.Expr_listContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.expr_list_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr_list_no_gt([NotNull] QueryParser.Expr_list_no_gtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.expr_list_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr_list_no_gt([NotNull] QueryParser.Expr_list_no_gtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.rel_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRel_op([NotNull] QueryParser.Rel_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.rel_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRel_op([NotNull] QueryParser.Rel_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.rel_op_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRel_op_no_gt([NotNull] QueryParser.Rel_op_no_gtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.rel_op_no_gt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRel_op_no_gt([NotNull] QueryParser.Rel_op_no_gtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="QueryParser.error"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterError([NotNull] QueryParser.ErrorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="QueryParser.error"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitError([NotNull] QueryParser.ErrorContext context);
}
